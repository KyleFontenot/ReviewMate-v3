---
import {formatSlug} from '../featureList.js'
import Article from "./Article.astro"
import Arrow from "./Arrow.astro"
import { contentfulItems} from './contentfulClient.js'
const {size = "small", title, postType = "blogPost", style, className}  = Astro.props;

let posts = await contentfulItems(postType)

const months = ['January', 'February',
'March','April','May','June','July','August','September','October','November','December',]
const descriptionCutoff = 120

---
<div class:list={ [ 'blogwrapper', className ] } id="blog" {style}>
  {size === 'large' ? 
  <h1 style="width: 100%;margin-bottom:4rem;">{title}</h1> : 
  <h3 style="width: 100%;margin-bottom: 2rem;">{title}</h3>}
  <div class="container">
    <!-- <slot/> -->

    {posts.map(post => 
      {
        let blogBody = post?.fields?.body?.content[0]?.content[0]?.value;
        let formatDate = new Date(post.fields.dateCreated);
        return (<Article 
          articleTitle={post.fields.title}
          href={post.fields.url ? post.fields.url : `/blog/${formatSlug(post.fields.title)}/`}
          imgSrc={post.fields.thumbnail.fields.file.url}
          imgAlt={post.fields.thumbnailAlt}
          body={blogBody.length > descriptionCutoff ? blogBody.split('').splice(0, descriptionCutoff).join('').concat(' . . .') : blogBody}
          author={post.fields.author}
          date={`${months[formatDate.getMonth()]} ${formatDate.getDate()}, ${formatDate.getFullYear()}`}
          size={size}
          externallink={(postType === "articlePost") ? true : false}
      />)
    }
    )}
    
  </div>

  {size === "small" && <a href={postType === "blogPost" ? '/blog/' : postType === 'articlePost' ? '/articles' : '/'} style="display:block;text-align:right;font-size: 110%;margin: 0 0 2.5rem auto;">See more blog posts <Arrow direction="upright"/></a>}
</div>
<style lang="scss">
.blogwrapper {
  color: #666;
  background-color: #f2f2f2;
  width: 114%;
  margin-inline: -7%;
  padding: 2% 9%;
	height: 100%;
	display: block;
	& > h3, & > h2 {
    margin-top: 1.2rem;
    margin-bottom: 1.2rem;
    text-align:center;
  }
	.container {
    flex: row wrap;
		align-items: stretch;
    align-content: stretch;
		display:flex;
    margin-inline: auto;
    column-gap: 5%;
    justify-content: center;
	}
	@media (min-width: 590px){
  .container {
    flex-flow: row wrap;
		align-items: stretch;
    align-content: stretch;
		display: flex;
    & > div {
      flex: 2 1 12rem;
    }
    & .image { 
      display: block;
    }
  }
}
}
.container {
  display: flex;
  flex-flow: row wrap;
  gap: 1rem;
  margin-bottom: 3rem;
}
.image { 
  display: block;
  overflow: hidden;
  width: 100%;
  flex: 2 1 12rem;
  position: relative;
  overflow-y: hidden;
  & :global(img) {
    // height: 17rem!important;
    display: block;
    object-fit: cover;
    width: 100%;
    max-height: 15rem;
  }
 }
 
</style>
