---
import { Img } from "astro-imagetools/components";
import contentful from 'contentful'

const client = contentful.createClient({
  space: process.env.CONTENTFUL_SPACE_ID || import.meta.env.CONTENTFUL_SPACE_ID,
  accessToken: process.env.CONTENTFUL_CONTENT_DELIVERY || import.meta.env.CONTENTFUL_CONTENT_DELIVERY,
});

let blogPosts = await client.getEntries({
  content_type: 'blogPost'
  }).then(entries => {
    return entries.items
    }
).catch(err => {
  console.log(err)
});
const {size = "small", style} = Astro.props;

if (blogPosts.length > 3 && size !== 'large'){
  blogPosts = blogPosts.slice(0, 3)
}
---
<div class:list={[ 'blogwrapper', {wrapperlarge: size === 'large'}]} id="blog" {style}>
  {size === 'large' ? <h1 style="width: 100%;">Blog</h1> : <h3 style="width: 100%;">Blog Posts</h3>}
  <div class="container"><br />
    {blogPosts.map(post => {
      return (
        <a href={`/blog/${post.fields.title.toLowerCase().replaceAll(' ', '-')}`}>
          <div class="image">
            <Img src={`https://${post.fields.poster.fields.file.url}`} alt="something" objectFit="cover" />
          </div>
          <div class="textbody">
            <h4>{post.fields.title}</h4>
            {post.fields.body.content[0].content[0].value.length > 80 ? <p class="limited">{post.fields.body.content[0].content[0].value.split('').splice(0, 80).join('').concat('...')}</p> : <p>{post.fields.body.content[0].content[0].value}</p>}
            <span class="readmore">Read More</span>
          </div>
        </a>
      )
    })}
  </div>
</div>
<style lang="scss">

.container {
  display: flex;
  flex-flow: row nowrap;
  gap: 1rem;
  & > a { 
    transition: outline 0.2s;
    outline: 2px solid transparent;
   }
  & > a:hover, & > a:focus-visible, {
    outline: 2px solid hsl(var(--color1hsl));
  }
  & * {
    color: #666;
  }
  // & > h3, & > h2 {
  //   text-align: center;
  //   margin-top: 1.6rem;
  //   margin-bottom: 2rem;
  // }
}
.image { 
  display: block;
  overflow: hidden;
  width: 100%;
  flex: 2 1 12rem;
  position: relative;
  & :global(img) {
    height: 17rem!important;
    // width: 17rem!important;
    // height: 100%!important;
    display: block;
  }
 }
 .textbody {
   background-color: white;
   padding: 20px 30px;
   position: relative;
   border-bottom-left-radius: 10px;
   border-bottom-right-radius: 10px;
   min-height: 10rem;
   & > h3 {
     margin-top: 0;
   }
 }
 .readmore {
   position: absolute;
   bottom: 0.75rem;
   right: 1.25rem;
   font-size: 0.95rem;
   background-color: white;
   color: hsl(var(--color1hsl));
 }
//  .limited {
//    position: relative;
//  }
//  .limited::after {
//    content: '';
//    width: 3rem;
//    height: 1.2rem;
//    position: absolute;
//    bottom: 0;
//    right: 0;
//    background-color: hsl(var(--color1hsl));
//    outline: 2px solid purple;
//  }

</style>