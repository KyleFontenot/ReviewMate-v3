---
import Stream from "./Stream.astro"
import Article from "./Article.astro"
import contentful from 'contentful'

const {size = "small"} = Astro.props;

const client = contentful.createClient({
  space: process.env.CONTENTFUL_SPACE_ID || import.meta.env.CONTENTFUL_SPACE_ID,
  accessToken: process.env.CONTENTFUL_CONTENT_DELIVERY || import.meta.env.CONTENTFUL_CONTENT_DELIVERY,
});

let blogPosts = await client.getEntries({
  content_type: 'blogPost',
  order: '-sys.createdAt',
  limit: size === "large" ? 20 : 3
  }).then(entries => {
    return entries.items
    }
).catch(err => {
  console.log(err)
});

const months = ['January', 'February',
'March','April','May','June','July','August','September','October','November','December',]
const descriptionCutoff = 90
---
<Stream title="Blog Articles" size={ size } >
  {blogPosts.map(post => {
    const blogBody = post.fields.body.content[0].content[0].value;
    let formatDate =  new Date(post.fields.dateCreated)
    return (
      <Article 
        href={`/blog/${post.fields.title.toLowerCase().replaceAll(' ', '-')}`} 
        imgSrc={post.fields.poster.fields.file.url} 
        imgAlt="something" 
        articleTitle={post.fields.title}
        description={blogBody.length > descriptionCutoff ? blogBody.split('').splice(0, descriptionCutoff).join('').concat('...') : blogBody}
        author={post.fields.author} 
        date={`${months[formatDate.getMonth()]} ${formatDate.getDate()}, ${formatDate.getFullYear()}`}
      />
    )
  }
)}
</Stream>