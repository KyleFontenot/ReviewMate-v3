---
import { Img } from "astro-imagetools/components";
import contentful from 'contentful'

const client = contentful.createClient({
  space: process.env.CONTENTFUL_SPACE_ID || import.meta.env.CONTENTFUL_SPACE_ID,
  accessToken: process.env.CONTENTFUL_CONTENT_DELIVERY || import.meta.env.CONTENTFUL_CONTENT_DELIVERY,
});

const {size = "small", style} = Astro.props;

let blogPosts = await client.getEntries({
  content_type: 'blogPost',
  order: '-sys.createdAt',
  limit: size === "large" ? 20 : 3
  }).then(entries => {
    return entries.items
    }
).catch(err => {
  console.log(err)
});
// if (blogPosts.length > 3 && size !== 'large'){
//   blogPosts = blogPosts.slice(0, 3)
// }
---
<div class:list={[ 'blogwrapper', {wrapperlarge: size === 'large'}]} id="blog" {style}>
  {size === 'large' ? <h1 style="width: 100%;">Blog</h1> : <h3 style="width: 100%;">Blog Posts</h3>}
  <div class="container"><br />
    {blogPosts.map(post => {
      return (
        <a href={`/blog/${post.fields.title.toLowerCase().replaceAll(' ', '-')}`} class="articlediv">
          <div class="image">
            <Img src={`https://${post.fields.poster.fields.file.url}`} alt="something" objectFit="cover" />
          </div>
          <div class="textbody">
            <h4>{post.fields.title}</h4>
            {post.fields.body.content[0].content[0].value.length > 80 ? <p class="limited">{post.fields.body.content[0].content[0].value.split('').splice(0, 80).join('').concat('...')}</p> : <p>{post.fields.body.content[0].content[0].value}</p>}
            <p class="author">{post.fields.author}</p>
            <span class="readmore">Read More</span>
          </div>
        </a>
      )
    })}
  </div>
</div>
<style lang="scss">
.container {
  display: flex;
  flex-flow: row wrap;
  gap: 1rem;
  & > a { 
    transition: outline 0.2s;
    outline: 2px solid transparent;
   }
  & > a:hover, & > a:focus-visible, {
    outline: 2px solid hsl(var(--color1hsl));
  }
  & * {
    color: #666;
  }
}
.image { 
  display: block;
  overflow: hidden;
  width: 100%;
  flex: 2 1 12rem;
  position: relative;
  & :global(img) {
    height: 17rem!important;
    // width: 17rem!important;
    // height: 100%!important;
    display: block;
  }
 }
 .textbody {
   background-color: white;
   padding: 20px 30px;
   position: relative;
   border-bottom-left-radius: 10px;
   border-bottom-right-radius: 10px;
   min-height: 10rem;
   & > h3 {
     margin-top: 0;
   }
 }
 .readmore {
   position: absolute;
   bottom: 0.75rem;
   right: 1.25rem;
   font-size: 0.95rem;
   background-color: white;
   color: hsl(var(--color1hsl));
 }
 .textbody {
   background-color: white;
   padding: 20px 30px;
   padding-bottom: 4rem;
   position: relative;
   border-bottom-left-radius: 10px;
   border-bottom-right-radius: 10px;
   min-height: 10rem;
   height: 100%;
   & > h3 {
     margin-top: 0;
   }
   & > h4 {

     font-size: 1.3rem;
   }
   & p {
     text-indent: 0;
   }
   & .url {
     font-size: 0.8rem;
     line-height: 1rem;
     color: #999;
   }
   & .date {
     position: absolute;
     right: 1.5rem;
     bottom: 0.5rem;
     font-size: 0.9rem;
   }
 }
 .readmore {
  position: absolute;
  bottom: 0.75rem;
  right: 1.25rem;
  font-size: 0.95rem;
  background-color: white;
  color: hsl(var(--color1hsl));
 }
 .articlediv{
   flex: 1 1 30rem;
   max-width: 30rem;
  //  min-width: 30rem;
 }
 .author {
  position: absolute;
  bottom: 0.55rem;
  left: 1.5rem;
 }
</style>
