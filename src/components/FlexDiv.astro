---
export interface FlexDivProps {
  variant?: 0 | 1 | 2 ;
  style?: string;
  id?: string;
  justify?: 'center' | 'flex-end' | 'flex-start' | 'start' | 'space-around' | 'space-between';
  alignContent?: 'center' | 'flex-end' | 'flex-start' | 'start' | 'space-around' | 'space-between';
  className?: string;
  gap?: string;
  padding?: string;
}
const {variant, style, id, className, justify, gap, padding, alignContent } = Astro.props as FlexDivProps;
let procStyle = new String();
// console.log(className);
if (style ) {
  procStyle = procStyle.concat(style);
}
if (justify ) {
  procStyle = procStyle.concat('justify-content:' + justify + ';');
}
if (alignContent) {
  procStyle = procStyle.concat('align-content:' + alignContent + ';');
}
if (gap ) {
  procStyle = procStyle.concat('gap:' + gap + ';');
}
if (padding ) {
  procStyle = procStyle.concat('padding:' + padding + ';');
}
---

{variant === 0 ? <div class:list={["flexdiv", "flexdiv0", className]} {id} style={procStyle}>
<slot name="image"/>
<slot name="body"/>
</div> : variant === 1 ? <div class:list={["flexdiv", "flexdiv0", className]} {id} style={procStyle}>
<slot name="body"/>
<slot name="image"/>
</div> : variant === 2 ? <div class:list={["flexdiv", "flexdiv0", className]} {id} style={procStyle}>
<slot name="image"/>
<slot name="body"/>
</div>  : <div class:list={["flexdiv", "flexdiv0", className]} {id} style={procStyle}>
<slot />
</div> }
