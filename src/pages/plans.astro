---
import StandardLayout from "../layouts/StandardLayout.astro"
import Checkmark from "../components/Checkmark.astro"
import { FeatureDropdown} from '../components/FeatureDropdown.jsx'
import FlexDiv from '../components/FlexDiv.astro'

import featureList from '../featureList.js'
const {auditing_modules, reporting, integration, analytics, addition_functionalities } = featureList;

const capitalizeString = (str : string) => {
  if (!str.includes('_')){
    let strArr = str.split('')
    strArr[0] = strArr[0].toUpperCase()
    return strArr.join('')
  }
  else {
    let wordArr = str.split('_').map(word => {
      let strArr = word.split('')
      strArr[0] = strArr[0].toUpperCase()
      return strArr.join('') 
    })
    return wordArr.join(' ')
  }
}
// console.log(Object.entries(featureList)[0][1][0].title);
// console.log(Object.entries(featureList)[0][1])
---
<StandardLayout>

<div style="position: relative;">
  <h1 >Plans</h1>
  <p>All plans contain everything you may need for the core auditing tools such as importing data from your universe of data, pin-point findings, audit, and customizing reports. The Pro and Enterprise tiers are focused on auxiliary features such as automated montioring, client-facing dashboards, benchmarking, and more.</p>

</div>
<div class="planoverview">
  <div>
    <h3>Essentials</h3>
    <p>Everything you need to revolutionize your auditing workflow.</p>
  </div>
  <div>
    <h3>Pro</h3>
    <p>Additional features pertaining to a few more administrative and monitoring roles.</p>
  </div>
  <div>
    <h3>Enterprise</h3>
    <p>Full-suite of features extending the power of every role in your firm.</p>
  </div>
</div>  
<h4 style="max-width: 40rem;margin-inline: auto;text-align: center;color: #888;font-size: 1.4rem;margin-top: 4rem;">Please note! :</h4>
<p style="max-width: 40rem;margin-inline: auto;padding: 0.2rem 3rem 2rem;background: linear-gradient(to bottom, transparent 20%, #cccccc29);border-radius: 10px;margin-bottom:2rem;color: #777;">None of the plans are restrictions, they are simply commonly grouped features. We manicure plans to your specific needs, so let us connect with you about your particular situation.</p>
<div style="overflow-x:scroll;height: 110%;width: 100%;">
  <table id="wholetable" style="margin-bottom: 3rem;width: 100%;">
    <thead id="tablehead">
      <tr>
        <th class=""><h2 style="font-size: 1.3rem; margin: 0;">Features</h2></th>
        <th class="stickyhead"><h2>Essentials</h2></th>
        <th class="stickyhead"><h2>Pro</h2></th>
        <th class="stickyhead"><h2>Enterprise</h2></th>
      </tr>
    </thead>
    <tbody>

    {Object.entries(featureList).map(category => {
      // console.log(category[1]);
      return (
      <tr><td colspan={ 4 } class="moduleheading"><h3>{capitalizeString(category[0])}</h3></td></tr>
      {category[1].map(feature => {
        return (
          <tr>
            <td><FeatureDropdown header={feature.title} body={feature.short} link={feature.link} client:idle /></td>
            <td><Checkmark bool={feature.essentials} /></td>
            <td><Checkmark bool={feature.pro}  /></td>
            <td><Checkmark bool={feature.enterprise}  /></td>
          </tr>
        )
      })}
      

      )
    } ) }

    </tbody>
  </table>
</div>

<script>
  let headtop = document.querySelector('#wholetable').offsetTop;
  let scrollTop = window.scrollY;

  // window.addEventListener('scroll', () => {
  //   scrollTop = window.scrollY;
  //   console.log(document.querySelectorAll('th'))
  //   if (scrollTop >= headtop) {
  //     document.querySelectorAll('th').forEach(each => {
  //       each.style.position = "fixed"
  //       each.style.top = "0"
  //     })
  //     // document.querySelectorAll('th').style.top = "0"
  //   }
  //   else {
  //     document.querySelectorAll('th').style.position = "relative"
  //     document.querySelectorAll('th').style.top = "0"
  //   }
  // })

  window.onresize = () => {
      headtop = document.querySelector('#wholetable').offsetTop;
    }

</script>

</StandardLayout>

<style lang="scss">
.tableheaders{
  position: sticky;
  top: 0;
  & h2 {
  display: inline-block;
  }
}
  table {
    // width: 104%;
    font-size: 1.05rem;
    border-collapse: separate; 
    // margin-inline: -2%;
    // margin-bottom: 3rem;
    overflow-x:scroll;
    position: relative;
    // table-layout: fixed;
  }

  th, td {
    padding: 1rem;
    font-weight: bolder;
  }
  thead {
    // position:fixed;
    top: 0;
  }
  th {
    position: sticky;
    top: 0;
    font-size: 3rem;
    background-color: white;
    height: 4rem;
    z-index: 500;
    // position: sticky;
    // padding: 3rem 0 0;
    & > h2 {
      display: block;
      line-height: 4rem;
      margin:0;
    }
  }
  tr {
    background-color: transparent;
    transition: background-color 0.25s;
    &:hover {
      background-color: #f7f7f7;
    }
    &:nth-of-type(1):hover {
      background-color: transparent;
    }
  }
  td {
    // border: 1px solid #777;
    vertical-align: middle;
    text-align: center;
    position: sticky;
    left: 0;
    background-color:white;
    z-index:300;
    border-right: 1px solid #ddd;
    width: 16rem;
    min-width: 16rem;
    // padding: 1rem;
    
    &:nth-of-type(2), &:nth-of-type(3), &:nth-of-type(4) {
      border-top: 1px solid #ddd;
      border-left: 1px solid #ddd;
      font-weight: normal;
      position: relative;
      z-index:200;
    }
    &:nth-of-type(2) {
      border-left: 0px solid transparent;
    background-color: #ffffff33;
    }
    &:nth-of-type(2), &:nth-of-type(3) {
      border-right: 0px solid transparent;
    }
    &:nth-of-type(3) {
    background-color: hsla(var(--color2hsl), 4%);
    }
    &:nth-of-type(4) {
      border-right: 1px solid #ddd;
      background-color: hsla(var(--color1hsl), 3%);
    }
    // td[colspan="4"]{
    //   position: relative;
    // }
  }
    .moduleheading {
      background-color: #f4f4f4;
      font-size: 1rem;
      text-align: center;
      text-indent: 3rem;
      letter-spacing: 1px;
      font-weight: bold;
      z-index: 200;
      & h3 {
        font-size: 1.3rem;
        margin-bottom: 0;
      }
    }

    .planoverview {
      display: flex;
      width: 100%;
      flex-flow: column;
      max-width: 90%;
      margin-inline: auto;
      gap: 1.5rem;
      margin-bottom: 3rem;
      margin-top: 4rem;
      
      & > div {  
        width: 100%;
        margin-inline: auto;
        text-align: left;
        border-radius: 10px;
        & p, & h3 {
        border-width: 1px;
        border-style: solid;
      }
        & > h3 {
          text-align: center;
          display: block;
          margin-inline: auto;
          width: 10rem;
          width: 100%;
          padding: 18px;
          margin-bottom: 0;
          background-color:#dddddd54;
          border-top-left-radius: 10px;
          border-top-right-radius: 10px;
          border-bottom-color: transparent!important;
        }
        & > p {
          background-color:#dddddd14;
          text-align: left;
          padding: 18px 8% 26px;
          border-bottom-left-radius: 10px;
          border-bottom-right-radius: 10px;
          margin-bottom: 0;
          
        }
        &:nth-of-type(1){
          box-shadow: 0 1px 10px -4px #ccc;
          & > h3 {
            border-color: #ccc;
          }
          & > p {
            border-color: #ccc;
          }
        }
        &:nth-of-type(2){
          box-shadow: 0 1px 10px -4px hsl(var(--color2hsl));
          & > h3 {
            background-color: hsla(var(--color2hsl), 20%);
            border-color: hsl(var(--color2hsl));
          }
          & > p {
            background-color: hsla(var(--color2hsl), 5%);
            border-color: hsl(var(--color2hsl));
          }
        }
        &:nth-of-type(3){
          box-shadow: 0 1px 10px -4px hsla(var(--color1hsl), 60%);
          border-radius: 10px;
          & > h3 {
            background-color: hsla(var(--color1hsl), 10%);
            border-color: hsla(var(--color1hsl), 40%);
          }
          & > p {
            background-color: hsla(var(--color1hsl), 5%);
            border-color: hsla(var(--color1hsl), 40%);
          }
        }
      }
    }
    @media (min-width: 690px){
      .planoverview {
        flex-flow: row nowrap;
        align-items: center;
        max-width: 100%;
        & div {
          display: block;
          height: 16rem;
          height: 100%;
          & > p {
            // height: 100%;
            text-indent: 20px;
          }
        }
      }
    }
</style>