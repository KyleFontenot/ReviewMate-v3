---
import FeatureCategory from "../../components/FeatureCategory.astro"
import StandardLayout from "../../layouts/StandardLayout.astro"
import Feature from "../../components/Feature.astro"
import featureList from "../../featureList.js"
import {pageOpenGraph} from "../../utils.js"
import type {Module } from "../../featureList.js"
let auditingModules : Module[] = [];

Object.values(featureList).forEach(category => { 
  let testingGrab = category.filter(module => {
    module.section === "Auditing" ? auditingModules.push(module) : false
  })
 })
---
<StandardLayout 
  openGraph={new pageOpenGraph('Auditing Features', 
  "Spanning every auditing acount type from IPPS, OPPS, to Profee and CMS-HCC, ReviewMate works with the vast majority of users in the field.")}>


  <FeatureCategory title="Auditing" imageBG="/src/images/auditingoverview.jpg">
    <div slot="generalinfo" class="intoparagraph" style="">
      <p>ReviewMate covers every every scenario in your role in auditing. IPPS, OPPS, Profee, and CMS-HCC are all standard accounts that are supported natively, that inherit all of the communication and workflow benefits of ReviewMate's infrastructure. </p>
    </div>
    <div class="featurelist">
      {auditingModules.map(module => {
        return (
          <Feature size="small" title={module.title} href={`/auditing/${module.slug}/`}>
            <p style="text-indent: 0;">{module.short}</p>
          </Feature>
        )
      })}
    </div>
    <!-- Could add another featurelist here for separating Core auditing accounts with other features. -->
    <!-- <div class="featurelist" slot="secondfeaturelist">
      {auditingModules.map(module => {
        return (
          <Feature size="small" title={module.title} href={`/auditing/${module.slug}/`}>
            <p style="text-indent: 0;">{module.short}</p>
          </Feature>
        )
      })}
    </div> -->
  </FeatureCategory>
</StandardLayout>
<style lang="scss">
  .intoparagraph{ 
    width: 100%;
   }
  @media(min-width:540px){
  .intoparagraph{ 
    width: clamp(4rem, 76%, 40rem);
   }
  }
  .featurelist {
      display: flex;
      justify-content: space-between;
      flex-flow: row wrap;
      // gap: 3rem;
      gap: 1rem;
      border-color: hsl(var(--color1hsl));
      box-shadow: 0 3px 10px -2px #bbb;
      padding: 2.5rem 1.4rem 4rem;
      border-radius: 8px;
      margin-top: 3rem;
      z-index: 30;
      & > :global(div), & > :global(article), & > :global(article), :global(section),{
        flex: 2 1 26rem;
        // max-width: 30rem;
        margin-bottom: 2rem;
        margin-inline: auto;
      }
    }
</style>